import { z } from "zod";
export declare const propertyStatusEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"property_status", ["sale", "rent"]>;
export declare const propertyCategoryEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"property_category", ["residential", "commercial"]>;
export declare const propertyTypeEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"property_type", ["apartment", "independent-house", "villa", "farm-house", "shop", "basement"]>;
export declare const propertySubTypeEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"property_sub_type", ["1rk", "1bhk", "2bhk", "3bhk", "4bhk", "plot", "other"]>;
export declare const areaUnitEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"area_unit", ["sq-ft", "sq-mt", "sq-yd"]>;
export declare const furnishedStatusEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"furnished_status", ["furnished", "semi-furnished", "unfurnished"]>;
export declare const facingEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"facing", ["east", "west", "north", "south", "road", "park", "greenery"]>;
export declare const parkingEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"parking", ["car", "two-wheeler", "both", "none"]>;
export declare const portionEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"portion", ["front", "back", "side", "floor"]>;
export declare const mediaTypeEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"media_type", ["image", "video"]>;
export declare const inquiryStatusEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"inquiry_status", ["new", "contacted", "resolved"]>;
export declare const facilityTypeEnum: import("drizzle-orm/mysql-core").MySqlEnumColumnBuilderInitial<"facility_type", ["school", "hospital", "market", "park", "metro", "bus-stop", "bank", "atm", "restaurant", "gym", "temple", "mall", "gas-station", "other"]>;
export declare const users: import("drizzle-orm/mysql-core").MySqlTableWithColumns<{
    name: "users";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "id";
            tableName: "users";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: true;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        username: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "username";
            tableName: "users";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        email: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "email";
            tableName: "users";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        password: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "password";
            tableName: "users";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        role: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "role";
            tableName: "users";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        googleId: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "google_id";
            tableName: "users";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "created_at";
            tableName: "users";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "updated_at";
            tableName: "users";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "mysql";
}>;
export declare const properties: import("drizzle-orm/mysql-core").MySqlTableWithColumns<{
    name: "properties";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "id";
            tableName: "properties";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: true;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        title: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "title";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        slug: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "slug";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        description: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "description";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        status: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "status";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "sale" | "rent";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["sale", "rent"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        category: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "category";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "residential" | "commercial";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["residential", "commercial"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        propertyType: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "property_type";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "apartment" | "independent-house" | "villa" | "farm-house" | "shop" | "basement";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["apartment", "independent-house", "villa", "farm-house", "shop", "basement"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        subType: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "sub_type";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "1rk" | "1bhk" | "2bhk" | "3bhk" | "4bhk" | "plot" | "other";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["1rk", "1bhk", "2bhk", "3bhk", "4bhk", "plot", "other"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        portion: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "property_portion";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "front" | "back" | "side" | "floor";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["front", "back", "side", "floor"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        area: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "area";
            tableName: "properties";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        areaUnit: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "area_unit";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "sq-ft" | "sq-mt" | "sq-yd";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["sq-ft", "sq-mt", "sq-yd"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        furnishedStatus: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "furnished_status";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "furnished" | "semi-furnished" | "unfurnished";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["furnished", "semi-furnished", "unfurnished"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        bedrooms: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "bedrooms";
            tableName: "properties";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        bathrooms: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "bathrooms";
            tableName: "properties";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        balconies: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "balconies";
            tableName: "properties";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        facing: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "facing";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "east" | "west" | "north" | "south" | "road" | "park" | "greenery";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["east", "west", "north", "south", "road", "park", "greenery"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        parking: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "parking";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "car" | "two-wheeler" | "both" | "none";
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["car", "two-wheeler", "both", "none"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        age: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "age";
            tableName: "properties";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        price: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "price";
            tableName: "properties";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        priceNegotiable: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "price_negotiable";
            tableName: "properties";
            dataType: "boolean";
            columnType: "MySqlBoolean";
            data: boolean;
            driverParam: number | boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        brokerage: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "brokerage";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        contactDetails: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "contact_details";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        latitude: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "latitude";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        longitude: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "longitude";
            tableName: "properties";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isActive: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "is_active";
            tableName: "properties";
            dataType: "boolean";
            columnType: "MySqlBoolean";
            data: boolean;
            driverParam: number | boolean;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "created_at";
            tableName: "properties";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "updated_at";
            tableName: "properties";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "mysql";
}>;
export declare const propertyMedia: import("drizzle-orm/mysql-core").MySqlTableWithColumns<{
    name: "property_media";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "id";
            tableName: "property_media";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: true;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        propertyId: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "property_id";
            tableName: "property_media";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        mediaType: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "media_type";
            tableName: "property_media";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "image" | "video";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["image", "video"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cloudinaryId: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "cloudinary_id";
            tableName: "property_media";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        cloudinaryUrl: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "cloudinary_url";
            tableName: "property_media";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        isFeatured: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "is_featured";
            tableName: "property_media";
            dataType: "boolean";
            columnType: "MySqlBoolean";
            data: boolean;
            driverParam: number | boolean;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        orderIndex: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "order_index";
            tableName: "property_media";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "created_at";
            tableName: "property_media";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "mysql";
}>;
export declare const nearbyFacilities: import("drizzle-orm/mysql-core").MySqlTableWithColumns<{
    name: "nearby_facilities";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "id";
            tableName: "nearby_facilities";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: true;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        propertyId: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "property_id";
            tableName: "nearby_facilities";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        facilityName: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "facility_name";
            tableName: "nearby_facilities";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        distance: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "distance";
            tableName: "nearby_facilities";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        distanceValue: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "distance_value";
            tableName: "nearby_facilities";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        facilityType: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "facility_type";
            tableName: "nearby_facilities";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "other" | "park" | "school" | "hospital" | "market" | "metro" | "bus-stop" | "bank" | "atm" | "restaurant" | "gym" | "temple" | "mall" | "gas-station";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["school", "hospital", "market", "park", "metro", "bus-stop", "bank", "atm", "restaurant", "gym", "temple", "mall", "gas-station", "other"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        latitude: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "latitude";
            tableName: "nearby_facilities";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        longitude: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "longitude";
            tableName: "nearby_facilities";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "created_at";
            tableName: "nearby_facilities";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "updated_at";
            tableName: "nearby_facilities";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "mysql";
}>;
export declare const inquiries: import("drizzle-orm/mysql-core").MySqlTableWithColumns<{
    name: "inquiries";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "id";
            tableName: "inquiries";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: true;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        propertyId: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "property_id";
            tableName: "inquiries";
            dataType: "number";
            columnType: "MySqlInt";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        name: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "name";
            tableName: "inquiries";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        email: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "email";
            tableName: "inquiries";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        phone: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "phone";
            tableName: "inquiries";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        message: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "message";
            tableName: "inquiries";
            dataType: "string";
            columnType: "MySqlText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        status: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "status";
            tableName: "inquiries";
            dataType: "string";
            columnType: "MySqlEnumColumn";
            data: "new" | "contacted" | "resolved";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["new", "contacted", "resolved"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "created_at";
            tableName: "inquiries";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/mysql-core").MySqlColumn<{
            name: "updated_at";
            tableName: "inquiries";
            dataType: "date";
            columnType: "MySqlTimestamp";
            data: Date;
            driverParam: string | number;
            notNull: false;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "mysql";
}>;
export declare const propertiesRelations: import("drizzle-orm").Relations<"properties", {
    media: import("drizzle-orm").Many<"property_media">;
    facilities: import("drizzle-orm").Many<"nearby_facilities">;
    inquiries: import("drizzle-orm").Many<"inquiries">;
}>;
export declare const propertyMediaRelations: import("drizzle-orm").Relations<"property_media", {
    property: import("drizzle-orm").One<"properties", true>;
}>;
export declare const nearbyFacilitiesRelations: import("drizzle-orm").Relations<"nearby_facilities", {
    property: import("drizzle-orm").One<"properties", true>;
}>;
export declare const inquiriesRelations: import("drizzle-orm").Relations<"inquiries", {
    property: import("drizzle-orm").One<"properties", false>;
}>;
export declare const insertUserSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodEnum<undefined>>;
    username: z.ZodString;
    email: z.ZodString;
    password: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    role: z.ZodOptional<z.ZodString>;
    googleId: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
}, "id">, z.UnknownKeysParam, z.ZodTypeAny, {
    username?: string;
    email?: string;
    password?: string;
    role?: string;
    googleId?: string;
    createdAt?: unknown;
    updatedAt?: unknown;
}, {
    username?: string;
    email?: string;
    password?: string;
    role?: string;
    googleId?: string;
    createdAt?: unknown;
    updatedAt?: unknown;
}>;
export declare const insertPropertySchema: z.ZodObject<Omit<{
    facing: z.ZodOptional<z.ZodNullable<z.ZodEnum<["east", "west", "north", "south", "road", "park", "greenery"]>>>;
    parking: z.ZodOptional<z.ZodNullable<z.ZodEnum<["car", "two-wheeler", "both", "none"]>>>;
    portion: z.ZodOptional<z.ZodNullable<z.ZodEnum<["front", "back", "side", "floor"]>>>;
    id: z.ZodOptional<z.ZodEnum<undefined>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    title: z.ZodString;
    slug: z.ZodString;
    description: z.ZodString;
    status: z.ZodEnum<["sale", "rent"]>;
    category: z.ZodEnum<["residential", "commercial"]>;
    propertyType: z.ZodEnum<["apartment", "independent-house", "villa", "farm-house", "shop", "basement"]>;
    subType: z.ZodOptional<z.ZodNullable<z.ZodEnum<["1rk", "1bhk", "2bhk", "3bhk", "4bhk", "plot", "other"]>>>;
    area: z.ZodEnum<undefined>;
    areaUnit: z.ZodEnum<["sq-ft", "sq-mt", "sq-yd"]>;
    furnishedStatus: z.ZodOptional<z.ZodNullable<z.ZodEnum<["furnished", "semi-furnished", "unfurnished"]>>>;
    bedrooms: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    bathrooms: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    balconies: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    age: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    price: z.ZodEnum<undefined>;
    priceNegotiable: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    brokerage: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    contactDetails: z.ZodString;
    latitude: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    longitude: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    isActive: z.ZodOptional<z.ZodEnum<undefined>>;
}, "id" | "createdAt" | "updatedAt">, z.UnknownKeysParam, z.ZodTypeAny, {
    facing?: "east" | "west" | "north" | "south" | "road" | "park" | "greenery";
    parking?: "car" | "two-wheeler" | "both" | "none";
    portion?: "front" | "back" | "side" | "floor";
    title?: string;
    slug?: string;
    description?: string;
    status?: "sale" | "rent";
    category?: "residential" | "commercial";
    propertyType?: "apartment" | "independent-house" | "villa" | "farm-house" | "shop" | "basement";
    subType?: "1rk" | "1bhk" | "2bhk" | "3bhk" | "4bhk" | "plot" | "other";
    area?: unknown;
    areaUnit?: "sq-ft" | "sq-mt" | "sq-yd";
    furnishedStatus?: "furnished" | "semi-furnished" | "unfurnished";
    bedrooms?: unknown;
    bathrooms?: unknown;
    balconies?: unknown;
    age?: unknown;
    price?: unknown;
    priceNegotiable?: unknown;
    brokerage?: string;
    contactDetails?: string;
    latitude?: string;
    longitude?: string;
    isActive?: unknown;
}, {
    facing?: "east" | "west" | "north" | "south" | "road" | "park" | "greenery";
    parking?: "car" | "two-wheeler" | "both" | "none";
    portion?: "front" | "back" | "side" | "floor";
    title?: string;
    slug?: string;
    description?: string;
    status?: "sale" | "rent";
    category?: "residential" | "commercial";
    propertyType?: "apartment" | "independent-house" | "villa" | "farm-house" | "shop" | "basement";
    subType?: "1rk" | "1bhk" | "2bhk" | "3bhk" | "4bhk" | "plot" | "other";
    area?: unknown;
    areaUnit?: "sq-ft" | "sq-mt" | "sq-yd";
    furnishedStatus?: "furnished" | "semi-furnished" | "unfurnished";
    bedrooms?: unknown;
    bathrooms?: unknown;
    balconies?: unknown;
    age?: unknown;
    price?: unknown;
    priceNegotiable?: unknown;
    brokerage?: string;
    contactDetails?: string;
    latitude?: string;
    longitude?: string;
    isActive?: unknown;
}>;
export declare const insertPropertyMediaSchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodEnum<undefined>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    propertyId: z.ZodEnum<undefined>;
    mediaType: z.ZodEnum<["image", "video"]>;
    cloudinaryId: z.ZodString;
    cloudinaryUrl: z.ZodString;
    isFeatured: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    orderIndex: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
}, "id" | "createdAt">, z.UnknownKeysParam, z.ZodTypeAny, {
    propertyId?: unknown;
    mediaType?: "image" | "video";
    cloudinaryId?: string;
    cloudinaryUrl?: string;
    isFeatured?: unknown;
    orderIndex?: unknown;
}, {
    propertyId?: unknown;
    mediaType?: "image" | "video";
    cloudinaryId?: string;
    cloudinaryUrl?: string;
    isFeatured?: unknown;
    orderIndex?: unknown;
}>;
export declare const insertNearbyFacilitySchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodEnum<undefined>>;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    latitude: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    longitude: z.ZodOptional<z.ZodNullable<z.ZodString>>;
    propertyId: z.ZodEnum<undefined>;
    facilityName: z.ZodString;
    distance: z.ZodString;
    distanceValue: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    facilityType: z.ZodEnum<["school", "hospital", "market", "park", "metro", "bus-stop", "bank", "atm", "restaurant", "gym", "temple", "mall", "gas-station", "other"]>;
}, "id" | "createdAt" | "updatedAt">, z.UnknownKeysParam, z.ZodTypeAny, {
    latitude?: string;
    longitude?: string;
    propertyId?: unknown;
    facilityName?: string;
    distance?: string;
    distanceValue?: unknown;
    facilityType?: "other" | "park" | "school" | "hospital" | "market" | "metro" | "bus-stop" | "bank" | "atm" | "restaurant" | "gym" | "temple" | "mall" | "gas-station";
}, {
    latitude?: string;
    longitude?: string;
    propertyId?: unknown;
    facilityName?: string;
    distance?: string;
    distanceValue?: unknown;
    facilityType?: "other" | "park" | "school" | "hospital" | "market" | "metro" | "bus-stop" | "bank" | "atm" | "restaurant" | "gym" | "temple" | "mall" | "gas-station";
}>;
export declare const insertInquirySchema: z.ZodObject<Omit<{
    id: z.ZodOptional<z.ZodEnum<undefined>>;
    email: z.ZodString;
    name: z.ZodString;
    createdAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    updatedAt: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    status: z.ZodOptional<z.ZodEnum<["new", "contacted", "resolved"]>>;
    propertyId: z.ZodOptional<z.ZodNullable<z.ZodEnum<undefined>>>;
    phone: z.ZodString;
    message: z.ZodString;
}, "id" | "createdAt" | "updatedAt" | "status">, z.UnknownKeysParam, z.ZodTypeAny, {
    email?: string;
    name?: string;
    propertyId?: unknown;
    phone?: string;
    message?: string;
}, {
    email?: string;
    name?: string;
    propertyId?: unknown;
    phone?: string;
    message?: string;
}>;
export type InsertUser = z.infer<typeof insertUserSchema>;
export type InsertProperty = z.infer<typeof insertPropertySchema>;
export type InsertPropertyMedia = z.infer<typeof insertPropertyMediaSchema>;
export type InsertNearbyFacility = z.infer<typeof insertNearbyFacilitySchema>;
export type InsertInquiry = z.infer<typeof insertInquirySchema>;
export type User = typeof users.$inferSelect;
export type Property = typeof properties.$inferSelect;
export type PropertyMedia = typeof propertyMedia.$inferSelect;
export type NearbyFacility = typeof nearbyFacilities.$inferSelect;
export type Inquiry = typeof inquiries.$inferSelect;
export type PropertyWithRelations = Property & {
    media?: PropertyMedia[];
    facilities?: NearbyFacility[];
    inquiries?: Inquiry[];
};
